version: '3.8'

services:
  # Prometheus - Collecte des métriques
  prometheus:
    image: prom/prometheus:latest
    container_name: hospital_prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=${PROMETHEUS_RETENTION:-200h}'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    environment:
      - SCRAPE_INTERVAL=${SCRAPE_INTERVAL:-15s}
      - EVALUATION_INTERVAL=${EVALUATION_INTERVAL:-15s}
    networks:
      - hospital_network
      - monitoring_network

  # Grafana - Visualisation des métriques
  grafana:
    image: grafana/grafana:latest
    container_name: hospital_grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP:-false}
      - GF_INSTALL_PLUGINS=${GF_INSTALL_PLUGINS:-grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel}
      - GF_SECURITY_SECRET_KEY=${GF_SECURITY_SECRET_KEY:-your-secret-key-here}
    networks:
      - monitoring_network

  # Node Exporter - Métriques système
  node-exporter:
    image: prom/node-exporter:latest
    container_name: hospital_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring_network

  # cAdvisor - Métriques des conteneurs
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: hospital_cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    networks:
      - monitoring_network

  # MySQL Exporter - Métriques MySQL
  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: hospital_mysql_exporter
    restart: unless-stopped
    ports:
      - "9104:9104"
    environment:
      - DATA_SOURCE_NAME=hospital_user:password@(hospital_mysql:3306)/hospital_db
    depends_on:
      - mysql
    networks:
      - hospital_network
      - monitoring_network

  # Redis Exporter - Métriques Redis
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: hospital_redis_exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://hospital_redis:6379
    depends_on:
      - redis
    networks:
      - hospital_network
      - monitoring_network

  # AlertManager - Gestion des alertes
  alertmanager:
    image: prom/alertmanager:latest
    container_name: hospital_alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring_network

  # Nginx Exporter - Métriques Nginx
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: hospital_nginx_exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - '-nginx.scrape-uri=http://hospital_nginx:80/nginx_status'
    depends_on:
      - nginx
    networks:
      - hospital_network
      - monitoring_network

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local

networks:
  monitoring_network:
    driver: bridge
  hospital_network:
    external: true
